import 'package:flex_color_scheme/flex_color_scheme.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

abstract final class AppTheme {
  static ThemeData light = FlexThemeData.light(
    colors: const FlexSchemeColor(
      primary: Color(0xFF388E3C),
      primaryContainer: Color(0xFF2E7D32),
      secondary: Color(0xFF26A69A),
      secondaryContainer: Color(0xFF00897B),
      tertiary: Color(0xFFAED581),
      tertiaryContainer: Color(0xFF8BC34A),
      appBarColor: Color(0xFF388E3C),
      error: Color(0xFFD32F2F),
    ),
    textTheme: TextTheme(
      displayLarge: GoogleFonts.montserrat(fontWeight: FontWeight.bold),
      headlineSmall: GoogleFonts.montserrat(fontWeight: FontWeight.bold),
      bodyMedium: GoogleFonts.openSans(),
      bodySmall: GoogleFonts.openSans(),
    ),
    subThemesData: const FlexSubThemesData(
      interactionEffects: true,
      tintedDisabledControls: true,
      useM2StyleDividerInM3: true,
      outlinedButtonRadius: 8.0,
      outlinedButtonBorderWidth: 1.0,
      inputDecoratorSchemeColor: SchemeColor.primary,
      inputDecoratorIsFilled: true,
      inputDecoratorIsDense: true,
      inputDecoratorBackgroundAlpha: 14,
      inputDecoratorBorderSchemeColor: SchemeColor.primary,
      inputDecoratorBorderType: FlexInputBorderType.outline,
      inputDecoratorRadius: 10.0,
      inputDecoratorUnfocusedHasBorder: false,
      inputDecoratorPrefixIconSchemeColor: SchemeColor.onPrimaryFixedVariant,
      fabUseShape: true,
      fabRadius: 10.0,
      alignedDropdown: true,
      navigationBarMutedUnselectedLabel: true,
      navigationBarMutedUnselectedIcon: true,
      navigationBarElevation: 6.0,
      navigationBarLabelBehavior: NavigationDestinationLabelBehavior.alwaysHide,
      navigationRailUseIndicator: true,
      navigationRailLabelType: NavigationRailLabelType.all,
    ),
    keyColors: const FlexKeyColors(
      useSecondary: true,
      useTertiary: true,
      useError: true,
    ),
    visualDensity: FlexColorScheme.comfortablePlatformDensity,
    cupertinoOverrideTheme: const CupertinoThemeData(applyThemeToAll: true),
  );

  static ThemeData dark = FlexThemeData.dark(
    colors: const FlexSchemeColor(
      primary: Color(0xFF81C784),
      primaryContainer: Color(0xFF4CAF50),
      secondary: Color(0xFF4DD0E1),
      secondaryContainer: Color(0xFF26A69A),
      tertiary: Color(0xFFDCE775),
      tertiaryContainer: Color(0xFFAED581),
      appBarColor: Color(0xFF81C784),
      error: Color(0xFFEF5350),
    ),
    textTheme: TextTheme(
      displayLarge: GoogleFonts.montserrat(fontWeight: FontWeight.bold),
      headlineSmall: GoogleFonts.montserrat(fontWeight: FontWeight.bold),
      bodyMedium: GoogleFonts.openSans(),
      bodySmall: GoogleFonts.openSans(),
    ),
    surfaceMode: FlexSurfaceMode.level,
    blendLevel: 10,
    appBarElevation: 1.0,
    subThemesData: const FlexSubThemesData(
      interactionEffects: true,
      tintedDisabledControls: true,
      blendOnColors: true,
      useM2StyleDividerInM3: true,
      outlinedButtonRadius: 8.0,
      outlinedButtonBorderWidth: 1.0,
      inputDecoratorSchemeColor: SchemeColor.primary,
      inputDecoratorIsFilled: true,
      inputDecoratorIsDense: true,
      inputDecoratorBackgroundAlpha: 45,
      inputDecoratorBorderSchemeColor: SchemeColor.primary,
      inputDecoratorBorderType: FlexInputBorderType.outline,
      inputDecoratorRadius: 10.0,
      inputDecoratorUnfocusedHasBorder: false,
      inputDecoratorPrefixIconSchemeColor: SchemeColor.primaryFixed,
      fabUseShape: true,
      fabRadius: 10.0,
      alignedDropdown: true,
      navigationBarMutedUnselectedLabel: true,
      navigationBarMutedUnselectedIcon: true,
      navigationBarElevation: 1.0,
      navigationBarLabelBehavior: NavigationDestinationLabelBehavior.alwaysHide,
      navigationRailUseIndicator: true,
      navigationRailLabelType: NavigationRailLabelType.all,
    ),
    keyColors: const FlexKeyColors(
      useSecondary: true,
      useTertiary: true,
      useError: true,
    ),
    visualDensity: FlexColorScheme.comfortablePlatformDensity,
    cupertinoOverrideTheme: const CupertinoThemeData(applyThemeToAll: true),
  );
}
